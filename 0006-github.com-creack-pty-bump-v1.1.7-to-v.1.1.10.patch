From 95e3af5ce5a7a8ccf62a7d763b752eef5b6adaf5 Mon Sep 17 00:00:00 2001
From: Mark D Horn <mark.d.horn@intel.com>
Date: Mon, 16 Nov 2020 13:57:26 -0800
Subject: [PATCH] github.com/creack/pty bump v1.1.7 to v.1.1.10

Need to patch creack/pty for this bug:
https://github.com/creack/pty/issues/96

Signed-off-by: Mark D Horn <mark.d.horn@intel.com>
---
 vendor/github.com/creack/pty/.gitignore       |  4 --
 vendor/github.com/creack/pty/Dockerfile.riscv | 14 ------
 vendor/github.com/creack/pty/mktypes.bash     | 19 -------
 vendor/github.com/creack/pty/run.go           | 41 ++++++++++-----
 .../creack/pty/test_crosscompile.sh           | 50 -------------------
 .../creack/pty/ztypes_freebsd_arm64.go        | 13 +++++
 6 files changed, 42 insertions(+), 99 deletions(-)
 delete mode 100644 vendor/github.com/creack/pty/.gitignore
 delete mode 100644 vendor/github.com/creack/pty/Dockerfile.riscv
 delete mode 100644 vendor/github.com/creack/pty/mktypes.bash
 delete mode 100644 vendor/github.com/creack/pty/test_crosscompile.sh
 create mode 100644 vendor/github.com/creack/pty/ztypes_freebsd_arm64.go

diff --git a/vendor/github.com/creack/pty/.gitignore b/vendor/github.com/creack/pty/.gitignore
deleted file mode 100644
index 1f0a99f2f2b0..000000000000
--- a/vendor/github.com/creack/pty/.gitignore
+++ /dev/null
@@ -1,4 +0,0 @@
-[568].out
-_go*
-_test*
-_obj
diff --git a/vendor/github.com/creack/pty/Dockerfile.riscv b/vendor/github.com/creack/pty/Dockerfile.riscv
deleted file mode 100644
index 476d8f11a887..000000000000
--- a/vendor/github.com/creack/pty/Dockerfile.riscv
+++ /dev/null
@@ -1,14 +0,0 @@
-FROM golang:1.12
-
-# Clone and complie a riscv compatible version of the go compiler.
-RUN git clone https://review.gerrithub.io/riscv/riscv-go /riscv-go
-# riscvdev branch HEAD as of 2019-06-29.
-RUN cd /riscv-go && git checkout 04885fddd096d09d4450726064d06dd107e374bf
-ENV PATH=/riscv-go/misc/riscv:/riscv-go/bin:$PATH
-RUN cd /riscv-go/src && GOROOT_BOOTSTRAP=$(go env GOROOT) ./make.bash
-ENV GOROOT=/riscv-go
-
-# Make sure we compile.
-WORKDIR pty
-ADD . .
-RUN GOOS=linux GOARCH=riscv go build
diff --git a/vendor/github.com/creack/pty/mktypes.bash b/vendor/github.com/creack/pty/mktypes.bash
deleted file mode 100644
index 82ee16721cba..000000000000
--- a/vendor/github.com/creack/pty/mktypes.bash
+++ /dev/null
@@ -1,19 +0,0 @@
-#!/usr/bin/env bash
-
-GOOSARCH="${GOOS}_${GOARCH}"
-case "$GOOSARCH" in
-_* | *_ | _)
-	echo 'undefined $GOOS_$GOARCH:' "$GOOSARCH" 1>&2
-	exit 1
-	;;
-esac
-
-GODEFS="go tool cgo -godefs"
-
-$GODEFS types.go |gofmt > ztypes_$GOARCH.go
-
-case $GOOS in
-freebsd|dragonfly|openbsd)
-	$GODEFS types_$GOOS.go |gofmt > ztypes_$GOOSARCH.go
-	;;
-esac
diff --git a/vendor/github.com/creack/pty/run.go b/vendor/github.com/creack/pty/run.go
index 959be26b208b..b07942514d6a 100644
--- a/vendor/github.com/creack/pty/run.go
+++ b/vendor/github.com/creack/pty/run.go
@@ -11,6 +11,8 @@ import (
 // Start assigns a pseudo-terminal tty os.File to c.Stdin, c.Stdout,
 // and c.Stderr, calls c.Start, and returns the File of the tty's
 // corresponding pty.
+//
+// Starts the process in a new session and sets the controlling terminal.
 func Start(c *exec.Cmd) (pty *os.File, err error) {
 	return StartWithSize(c, nil)
 }
@@ -19,16 +21,35 @@ func Start(c *exec.Cmd) (pty *os.File, err error) {
 // and c.Stderr, calls c.Start, and returns the File of the tty's
 // corresponding pty.
 //
-// This will resize the pty to the specified size before starting the command
+// This will resize the pty to the specified size before starting the command.
+// Starts the process in a new session and sets the controlling terminal.
 func StartWithSize(c *exec.Cmd, sz *Winsize) (pty *os.File, err error) {
+	if c.SysProcAttr == nil {
+		c.SysProcAttr = &syscall.SysProcAttr{}
+	}
+	c.SysProcAttr.Setsid = true
+	c.SysProcAttr.Setctty = true
+	return StartWithAttrs(c, sz, c.SysProcAttr)
+}
+
+// StartWithAttrs assigns a pseudo-terminal tty os.File to c.Stdin, c.Stdout,
+// and c.Stderr, calls c.Start, and returns the File of the tty's
+// corresponding pty.
+//
+// This will resize the pty to the specified size before starting the command if a size is provided.
+// The `attrs` parameter overrides the one set in c.SysProcAttr.
+//
+// This should generally not be needed. Used in some edge cases where it is needed to create a pty
+// without a controlling terminal.
+func StartWithAttrs(c *exec.Cmd, sz *Winsize, attrs *syscall.SysProcAttr) (pty *os.File, err error) {
 	pty, tty, err := Open()
 	if err != nil {
 		return nil, err
 	}
 	defer tty.Close()
+
 	if sz != nil {
-		err = Setsize(pty, sz)
-		if err != nil {
+		if err := Setsize(pty, sz); err != nil {
 			pty.Close()
 			return nil, err
 		}
@@ -42,15 +63,11 @@ func StartWithSize(c *exec.Cmd, sz *Winsize) (pty *os.File, err error) {
 	if c.Stdin == nil {
 		c.Stdin = tty
 	}
-	if c.SysProcAttr == nil {
-		c.SysProcAttr = &syscall.SysProcAttr{}
-	}
-	c.SysProcAttr.Setctty = true
-	c.SysProcAttr.Setsid = true
-	c.SysProcAttr.Ctty = int(tty.Fd())
-	err = c.Start()
-	if err != nil {
-		pty.Close()
+
+	c.SysProcAttr = attrs
+
+	if err := c.Start(); err != nil {
+		_ = pty.Close()
 		return nil, err
 	}
 	return pty, err
diff --git a/vendor/github.com/creack/pty/test_crosscompile.sh b/vendor/github.com/creack/pty/test_crosscompile.sh
deleted file mode 100644
index f0b1dcac092b..000000000000
--- a/vendor/github.com/creack/pty/test_crosscompile.sh
+++ /dev/null
@@ -1,50 +0,0 @@
-#!/usr/bin/env sh
-
-# Test script checking that all expected os/arch compile properly.
-# Does not actually test the logic, just the compilation so we make sure we don't break code depending on the lib.
-
-echo2() {
-    echo $@ >&2
-}
-
-trap end 0
-end() {
-    [ "$?" = 0 ] && echo2 "Pass." || (echo2 "Fail."; exit 1)
-}
-
-cross() {
-    os=$1
-    shift
-    echo2 "Build for $os."
-    for arch in $@; do
-	echo2 "  - $os/$arch"
-	GOOS=$os GOARCH=$arch go build
-    done
-    echo2
-}
-
-set -e
-
-cross linux     amd64 386 arm arm64 ppc64 ppc64le s390x mips mipsle mips64 mips64le
-cross darwin    amd64 386 arm arm64
-cross freebsd   amd64 386 arm
-cross netbsd    amd64 386 arm
-cross openbsd   amd64 386
-cross dragonfly amd64
-cross solaris   amd64
-
-# Not expected to work but should still compile.
-cross windows amd64 386 arm
-
-# TODO: Fix compilation error on openbsd/arm.
-# TODO: Merge the solaris PR.
-
-# Some os/arch require a different compiler. Run in docker.
-if ! hash docker; then
-    # If docker is not present, stop here.
-    return
-fi
-
-echo2 "Build for linux."
-echo2 "  - linux/riscv"
-docker build -t test -f Dockerfile.riscv .
diff --git a/vendor/github.com/creack/pty/ztypes_freebsd_arm64.go b/vendor/github.com/creack/pty/ztypes_freebsd_arm64.go
new file mode 100644
index 000000000000..4418139b26fd
--- /dev/null
+++ b/vendor/github.com/creack/pty/ztypes_freebsd_arm64.go
@@ -0,0 +1,13 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs types_freebsd.go
+
+package pty
+
+const (
+	_C_SPECNAMELEN = 0xff
+)
+
+type fiodgnameArg struct {
+	Len int32
+	Buf *byte
+}
-- 
2.29.2

